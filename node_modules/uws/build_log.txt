gyp info it worked if it ends with ok
gyp info using node-gyp@3.6.2
gyp info using node@8.8.1 | linux | x64
gyp info spawn /usr/bin/python2
gyp info spawn args [ '/home/cameron/.fnm/node-versions/v8.8.1/installation/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py',
gyp info spawn args   'binding.gyp',
gyp info spawn args   '-f',
gyp info spawn args   'make',
gyp info spawn args   '-I',
gyp info spawn args   '/home/cameron/code/hurtlingthrough.space/node_modules/uws/build/config.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/home/cameron/.fnm/node-versions/v8.8.1/installation/lib/node_modules/npm/node_modules/node-gyp/addon.gypi',
gyp info spawn args   '-I',
gyp info spawn args   '/home/cameron/.node-gyp/8.8.1/include/node/common.gypi',
gyp info spawn args   '-Dlibrary=shared_library',
gyp info spawn args   '-Dvisibility=default',
gyp info spawn args   '-Dnode_root_dir=/home/cameron/.node-gyp/8.8.1',
gyp info spawn args   '-Dnode_gyp_dir=/home/cameron/.fnm/node-versions/v8.8.1/installation/lib/node_modules/npm/node_modules/node-gyp',
gyp info spawn args   '-Dnode_lib_file=/home/cameron/.node-gyp/8.8.1/<(target_arch)/node.lib',
gyp info spawn args   '-Dmodule_root_dir=/home/cameron/code/hurtlingthrough.space/node_modules/uws',
gyp info spawn args   '-Dnode_engine=v8',
gyp info spawn args   '--depth=.',
gyp info spawn args   '--no-parallel',
gyp info spawn args   '--generator-output',
gyp info spawn args   'build',
gyp info spawn args   '-Goutput_dir=.' ]
gyp info spawn make
gyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]
make: Entering directory '/home/cameron/code/hurtlingthrough.space/node_modules/uws/build'
  CXX(target) Release/obj.target/uws/src/Extensions.o
  CXX(target) Release/obj.target/uws/src/Group.o
In file included from ../src/Backend.h:9,
                 from ../src/Networking.h:69,
                 from ../src/WebSocketProtocol.h:5,
                 from ../src/WebSocket.h:4,
                 from ../src/Group.h:4,
                 from ../src/Group.cpp:1:
../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/Libuv.h: In lambda function:
../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  CXX(target) Release/obj.target/uws/src/Networking.o
In file included from ../src/Backend.h:9,
                 from ../src/Networking.h:69,
                 from ../src/Networking.cpp:1:
../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/Libuv.h: In lambda function:
../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  CXX(target) Release/obj.target/uws/src/Hub.o
In file included from ../src/Backend.h:9,
                 from ../src/Networking.h:69,
                 from ../src/WebSocketProtocol.h:5,
                 from ../src/WebSocket.h:4,
                 from ../src/Group.h:4,
                 from ../src/Hub.h:4,
                 from ../src/Hub.cpp:1:
../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/Libuv.h: In lambda function:
../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  CXX(target) Release/obj.target/uws/src/Node.o
In file included from ../src/Backend.h:9,
                 from ../src/Networking.h:69,
                 from ../src/Socket.h:4,
                 from ../src/Node.h:4,
                 from ../src/Node.cpp:1:
../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/Libuv.h: In lambda function:
../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  CXX(target) Release/obj.target/uws/src/WebSocket.o
In file included from ../src/Backend.h:9,
                 from ../src/Networking.h:69,
                 from ../src/WebSocketProtocol.h:5,
                 from ../src/WebSocket.h:4,
                 from ../src/WebSocket.cpp:1:
../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/Libuv.h: In lambda function:
../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  CXX(target) Release/obj.target/uws/src/HTTPSocket.o
In file included from ../src/Backend.h:9,
                 from ../src/Networking.h:69,
                 from ../src/Socket.h:4,
                 from ../src/HTTPSocket.h:4,
                 from ../src/HTTPSocket.cpp:1:
../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/Libuv.h: In lambda function:
../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  CXX(target) Release/obj.target/uws/src/Socket.o
In file included from ../src/Backend.h:9,
                 from ../src/Networking.h:69,
                 from ../src/Socket.h:4,
                 from ../src/Socket.cpp:1:
../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/Libuv.h: In lambda function:
../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
  CXX(target) Release/obj.target/uws/src/addon.o
In file included from ../src/../src/Backend.h:9,
                 from ../src/../src/Networking.h:69,
                 from ../src/../src/WebSocketProtocol.h:5,
                 from ../src/../src/WebSocket.h:4,
                 from ../src/../src/Group.h:4,
                 from ../src/../src/Hub.h:4,
                 from ../src/../src/uWS.h:4,
                 from ../src/addon.cpp:1:
../src/../src/Libuv.h: In member function ‘void Poll::close(Loop*, void (*)(Poll*))’:
../src/../src/Libuv.h:166:20: warning: cast between incompatible function types from ‘void (*)(Poll*)’ to ‘void (*)(Poll*, int, int)’ [-Wcast-function-type]
  166 |         this->cb = (void(*)(Poll *, int, int)) cb;
      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/../src/Libuv.h: In lambda function:
../src/../src/Libuv.h:169:34: warning: cast between incompatible function types from ‘void (*)(Poll*, int, int)’ to ‘void (*)(Poll*)’ [-Wcast-function-type]
  169 |             void (*cb)(Poll *) = (void(*)(Poll *)) poll->cb;
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h: In static member function ‘static void v8::V8::SetAllowCodeGenerationFromStringsCallback(v8::DeprecatedAllowCodeGenerationFromStringsCallback)’:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:10176:7: warning: cast between incompatible function types from ‘v8::DeprecatedAllowCodeGenerationFromStringsCallback’ {aka ‘bool (*)(v8::Local<v8::Context>)’} to ‘v8::FreshNewAllowCodeGenerationFromStringsCallback’ {aka ‘bool (*)(v8::Local<v8::Context>, v8::Local<v8::String>)’} [-Wcast-function-type]
10176 |       reinterpret_cast<FreshNewAllowCodeGenerationFromStringsCallback>(
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10177 |           callback));
      |           ~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8.h: In static member function ‘static void v8::V8::RemoveGCPrologueCallback(v8::GCCallback)’:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:10222:7: warning: cast between incompatible function types from ‘v8::GCCallback’ {aka ‘void (*)(v8::GCType, v8::GCCallbackFlags)’} to ‘v8::Isolate::GCCallback’ {aka ‘void (*)(v8::Isolate*, v8::GCType, v8::GCCallbackFlags)’} [-Wcast-function-type]
10222 |       reinterpret_cast<Isolate::GCCallback>(callback));
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8.h: In static member function ‘static void v8::V8::RemoveGCEpilogueCallback(v8::GCCallback)’:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:10229:7: warning: cast between incompatible function types from ‘v8::GCCallback’ {aka ‘void (*)(v8::GCType, v8::GCCallbackFlags)’} to ‘v8::Isolate::GCCallback’ {aka ‘void (*)(v8::Isolate*, v8::GCType, v8::GCCallbackFlags)’} [-Wcast-function-type]
10229 |       reinterpret_cast<Isolate::GCCallback>(callback));
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h: In static member function ‘static void HttpServer::Request::headers(v8::Local<v8::String>, const v8::PropertyCallbackInfo<v8::Value>&)’:
../src/http.h:31:156: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   31 |                     args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) header.value, String::kNormalString, header.valueLength));
      |                                                                                                                                                            ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h: In static member function ‘static void HttpServer::Request::method(v8::Local<v8::String>, const v8::PropertyCallbackInfo<v8::Value>&)’:
../src/http.h:45:128: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   45 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "GET", String::kNormalString, 3));
      |                                                                                                                                ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:48:128: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   48 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "PUT", String::kNormalString, 3));
      |                                                                                                                                ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:51:129: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   51 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "POST", String::kNormalString, 4));
      |                                                                                                                                 ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:54:129: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   54 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "HEAD", String::kNormalString, 4));
      |                                                                                                                                 ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:57:130: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   57 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "PATCH", String::kNormalString, 5));
      |                                                                                                                                  ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:60:130: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   60 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "TRACE", String::kNormalString, 5));
      |                                                                                                                                  ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:63:131: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   63 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "DELETE", String::kNormalString, 6));
      |                                                                                                                                   ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:66:132: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   66 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "OPTIONS", String::kNormalString, 7));
      |                                                                                                                                    ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:69:132: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   69 |                 args.GetReturnValue().Set(String::NewFromOneByte(args.GetIsolate(), (uint8_t *) "CONNECT", String::kNormalString, 7));
      |                                                                                                                                    ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h: In static member function ‘static v8::Local<v8::Object> HttpServer::Request::getTemplateObject(v8::Isolate*)’:
../src/http.h:99:89: warning: ‘v8::Local<v8::Object> v8::Function::NewInstance() const’ is deprecated: Use maybe version [-Wdeprecated-declarations]
   99 |             Local<Object> reqObjectLocal = reqTemplateLocal->GetFunction()->NewInstance();
      |                                                                                         ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:3836:52: note: declared here
 3836 |   V8_DEPRECATED("Use maybe version", Local<Object> NewInstance() const);
      |                                                    ^~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h: In static member function ‘static void HttpServer::Response::writeHead(const v8::FunctionCallbackInfo<v8::Value>&)’:
../src/http.h:149:39: warning: comparison of integer expressions of different signedness: ‘int’ and ‘uint32_t’ {aka ‘unsigned int’} [-Wsign-compare]
  149 |                     for (int i = 0; i < headers->Length(); i++) {
      |                                     ~~^~~~~~~~~~~~~~~~~~~
../src/http.h: In static member function ‘static v8::Local<v8::Object> HttpServer::Response::getTemplateObject(v8::Isolate*)’:
../src/http.h:196:65: warning: ‘v8::Local<v8::Object> v8::Function::NewInstance() const’ is deprecated: Use maybe version [-Wdeprecated-declarations]
  196 |             return resTemplateLocal->GetFunction()->NewInstance();
      |                                                                 ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:3836:52: note: declared here
 3836 |   V8_DEPRECATED("Use maybe version", Local<Object> NewInstance() const);
      |                                                    ^~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h: In lambda function:
../src/http.h:227:155: warning: ‘static v8::Local<v8::String> v8::String::NewFromOneByte(v8::Isolate*, const uint8_t*, v8::String::NewStringType, int)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
  227 |             reqObject->SetInternalField(4, String::NewFromOneByte(isolate, (uint8_t *) req.getUrl().value, String::kNormalString, req.getUrl().valueLength));
      |                                                                                                                                                           ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:2670:21: note: declared here
 2670 |       Local<String> NewFromOneByte(Isolate* isolate, const uint8_t* data,
      |                     ^~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h: In static member function ‘static void HttpServer::createServer(const v8::FunctionCallbackInfo<v8::Value>&)’:
../src/http.h:293:122: warning: ‘v8::Local<v8::Object> v8::Function::NewInstance() const’ is deprecated: Use maybe version [-Wdeprecated-declarations]
  293 |             args.GetReturnValue().Set(newInstance = Local<Function>::New(args.GetIsolate(), httpPersistent)->NewInstance());
      |                                                                                                                          ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:3836:52: note: declared here
 3836 |   V8_DEPRECATED("Use maybe version", Local<Object> NewInstance() const);
      |                                                    ^~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h: In static member function ‘static void HttpServer::getExpressApp(const v8::FunctionCallbackInfo<v8::Value>&)’:
../src/http.h:320:159: warning: ‘bool v8::Object::SetPrototype(v8::Local<v8::Value>)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
  320 |             express->Get(String::NewFromUtf8(isolate, "request"))->ToObject()->SetPrototype(Local<Object>::New(args.GetIsolate(), reqTemplate)->GetPrototype());
      |                                                                                                                                                               ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:3256:43: note: declared here
 3256 |   V8_DEPRECATED("Use maybe version", bool SetPrototype(Local<Value> prototype));
      |                                           ^~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:321:160: warning: ‘bool v8::Object::SetPrototype(v8::Local<v8::Value>)’ is deprecated: Use maybe version [-Wdeprecated-declarations]
  321 |             express->Get(String::NewFromUtf8(isolate, "response"))->ToObject()->SetPrototype(Local<Object>::New(args.GetIsolate(), resTemplate)->GetPrototype());
      |                                                                                                                                                                ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:3256:43: note: declared here
 3256 |   V8_DEPRECATED("Use maybe version", bool SetPrototype(Local<Value> prototype));
      |                                           ^~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.cpp:3:
../src/http.h:327:60: warning: ‘v8::Local<v8::Object> v8::Function::NewInstance() const’ is deprecated: Use maybe version [-Wdeprecated-declarations]
  327 |             args.GetReturnValue().Set(express->NewInstance());
      |                                                            ^
In file included from /home/cameron/.node-gyp/8.8.1/include/node/v8.h:26,
                 from /home/cameron/.node-gyp/8.8.1/include/node/node.h:63,
                 from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
/home/cameron/.node-gyp/8.8.1/include/node/v8.h:3836:52: note: declared here
 3836 |   V8_DEPRECATED("Use maybe version", Local<Object> NewInstance() const);
      |                                                    ^~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/v8config.h:318:3: note: in definition of macro ‘V8_DEPRECATED’
  318 |   declarator __attribute__((deprecated(message)))
      |   ^~~~~~~~~~
In file included from ../src/addon.h:1,
                 from ../src/addon.cpp:2:
../src/addon.cpp: At global scope:
/home/cameron/.node-gyp/8.8.1/include/node/node.h:475:7: warning: cast between incompatible function types from ‘void (*)(v8::Local<v8::Object>)’ to ‘node::addon_register_func’ {aka ‘void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, void*)’} [-Wcast-function-type]
  475 |       (node::addon_register_func) (regfunc),                          \
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/cameron/.node-gyp/8.8.1/include/node/node.h:506:3: note: in expansion of macro ‘NODE_MODULE_X’
  506 |   NODE_MODULE_X(modname, regfunc, NULL, 0)
      |   ^~~~~~~~~~~~~
../src/addon.cpp:24:1: note: in expansion of macro ‘NODE_MODULE’
   24 | NODE_MODULE(uws, Main)
      | ^~~~~~~~~~~
  SOLINK_MODULE(target) Release/obj.target/uws.node
  COPY Release/uws.node
  ACTION binding_gyp_action_after_build_target_move_lib uws
  TOUCH Release/obj.target/action_after_build.stamp
make: Leaving directory '/home/cameron/code/hurtlingthrough.space/node_modules/uws/build'
gyp info ok 
